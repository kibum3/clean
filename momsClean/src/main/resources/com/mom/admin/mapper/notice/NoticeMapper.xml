<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.admin.mapper.notice.NoticeMapper">

	<!-- 검색 조건을 나타내는 쿼리 조각 -->
	<sql id="search">
		<!-- 카테고리 (글 제목, 작성일)이 null 이면서 서치타입이 ''이면 해당사항 검색 -->
		<!-- 검색이 안 되던 이유 = 서치타입을 설정 안 해놓고 not null로 해서 없는걸 가져오려 했기 때문 -->
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">
				AND notice_title LIKE CONCAT('%', CONCAT(#{keyword}, '%'))
			</if>
		</if>
	</sql>
	<sql id="total_list">
	<choose>
		<when test="searchType == null">
			AND rnum BETWEEN #{sizePerPage} * #{page} - 9
			AND	#{sizePerPage} * #{page}
		</when>
		<!-- <otherwise>
			AND rnum between #{sizePerPage} * (#{page} - 1) + 1 and #{sizePerPage} * #{page}
			검색 조건에 따라 추가적인 로직을 작성할 수 있음
		</otherwise> -->
	</choose>
</sql>

	<!-- 공지사항 등록 -->
	<insert id="create">
		INSERT INTO notice (notice_no, notice_title,
		notice_content)
		VALUES (notice_seq.NEXTVAL, #{noticeTitle},
		#{noticeContent})
	</insert>

	<!-- 공지사항 목록 조회 -->
	<!-- <select id="list" resultType="Notice"> <![CDATA[ SELECT notice_no, 
		notice_title, notice_content, notice_date FROM notice WHERE notice_no > 0 
		ORDER BY notice_date DESC ]]> </select> -->



	<!-- 페이징 요청 정보를 매개 변수로 받아 페이징 처리를 한 게시글 목록을 조회한다 -->
	<!-- 검색 조건을 추가한다 -->
	<!-- rnum = 데이터베이스에서 행 번호를 나타내는 가상 컬럼(별칭) 행 번호 = 특정 쿼리의 결과로 반환된 레코드들에 대한 
		고유번호를 부여하는데 사용 -->
	<!-- 서브쿼리 = sql 문장 안에서 또 다른 sql 문장을 사용하는 것을 의미 -->
	<!-- from 안에 서브쿼리로 order by를 해서 list에 뽑아낼 순서를 정한 뒤 rnum으로 번호를 매긴다 -->
	<select id="list" resultType="Notice">
	 	<![CDATA[
	 	WITH paginated_notices AS (
	 	select notice_no, notice_title, notice_date, notice_content
		from (SELECT notice_no,
			   notice_title,
			   notice_date,
			   notice_content,
			   rownum as rnum
		  FROM (select notice_no, notice_title, notice_date, notice_content
		  		from notice
		  		order by notice_no desc)
		  	
		 where notice_no > 0
		]]>
		<!-- include가 where절 밑에 있는 이유 = 위의 조건을 그룹화해서 include안의 명령어로 정리하기 위함 -->
		<include refid="search"></include>
		<![CDATA[
		order by notice_no desc) paginated
		OFFSET #{sizePerPage} * (#{page} - 1) ROWS FETCH NEXT #{sizePerPage} ROWS ONLY
    		)
    	SELECT notice_no, notice_title, notice_date, notice_content
    	FROM paginated_notices
    	where notice_no > 0
    	order by notice_no desc
		]]>
	</select>

	<!-- 공지사항 상세 조회 -->
	<select id="read" resultType="Notice">
		SELECT notice_no,
		notice_title,
		notice_content,
		notice_date
		FROM notice
		WHERE notice_no = #{noticeNo}
	</select>

	<!-- 공지사항 수정 처리 -->
	<update id="update">
		UPDATE notice
		SET notice_title =#{noticeTitle},
		notice_content =#{noticeContent}
		WHERE notice_no = #{noticeNo}
	</update>

	<!-- 공지사항 삭제 처리 -->
	<delete id="delete">
		DELETE FROM notice
		WHERE notice_no = #{noticeNo}
	</delete>
	<!-- 게시글 전체 건수를 조회한다 -->
	<select id="count" resultType="int">
		<![CDATA[
		SELECT count(notice_no)
		FROM notice
		WHERE notice_no > 0
		]]>
		
		<include refid="search"></include>
		
	</select>
</mapper>